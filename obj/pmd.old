<?xml version="1.0" encoding="UTF-8"?>
<pmd version="4.2.1" timestamp="Tue Jun 28 16:49:11 EEST 2011">
   <file name="C:/Users/Vadim/Documents/FleshDevelop/Items/src/nl/demonsters/debugger/MonsterDebugger.as">
      <violation beginline="179" endline="179" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="217" endline="217" begincolumn="35" endcolumn="35" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="273" endline="273" begincolumn="16" endcolumn="16" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="281" endline="281" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="284" endline="284" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.switchrules.SwitchStatementsShouldHaveDefault" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">A switch statement does not contain a default statement. Switch statements should have a default label in order to detect corner cases</violation>
      <violation beginline="427" endline="427" begincolumn="27" endcolumn="27" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="497" endline="497" begincolumn="35" endcolumn="35" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="521" endline="521" begincolumn="34" endcolumn="34" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="531" endline="531" begincolumn="16" endcolumn="16" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="534" endline="534" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="588" endline="588" begincolumn="13" endcolumn="13" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="610" endline="610" begincolumn="32" endcolumn="32" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="610" endline="610" begincolumn="47" endcolumn="47" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="625" endline="625" begincolumn="36" endcolumn="36" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="625" endline="625" begincolumn="51" endcolumn="51" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="636" endline="636" begincolumn="13" endcolumn="13" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="665" endline="665" begincolumn="13" endcolumn="13" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="679" endline="679" begincolumn="38" endcolumn="38" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="690" endline="690" begincolumn="68" endcolumn="68" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="693" endline="693" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="724" endline="724" begincolumn="16" endcolumn="16" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="746" endline="746" begincolumn="35" endcolumn="35" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="870" endline="870" begincolumn="13" endcolumn="13" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="894" endline="894" begincolumn="34" endcolumn="34" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="959" endline="959" begincolumn="20" endcolumn="20" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="1051" endline="1051" begincolumn="21" endcolumn="21" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="1444" endline="1444" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="1469" endline="1469" begincolumn="41" endcolumn="41" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="1552" endline="1552" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="1577" endline="1577" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="1749" endline="1749" begincolumn="47" endcolumn="47" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="1759" endline="1759" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="1781" endline="1781" begincolumn="34" endcolumn="34" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseGenericType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Use strongly typed objects instead of *. </violation>
      <violation beginline="1837" endline="1837" begincolumn="13" endcolumn="13" rule="adobe.ac.pmd.rules.maintanability.forbiddentypes.UseObjectType" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="1">Do not use Object class. It is a bad practice to use the dynamic class Object. Prefer using strongly typed object, or marker interface in order to avoid silent compilation errors while refactoring</violation>
      <violation beginline="63" endline="63" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.asdocs.ClassAsDocMissing" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This class ({0}) should be documented with AsDocs.. </violation>
      <violation beginline="63" endline="63" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFunction" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many methods detected (10 maximum, but 26 actually). A class with too many methods is probably a good suspect for refactoring, in order to reduce its complexity and find a way to have more fine grained objects</violation>
      <violation beginline="63" endline="63" begincolumn="15" endcolumn="15" rule="adobe.ac.pmd.rules.sizing.TooManyFields" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Too many field detected (5 maximum, but 14 actually). Classes that have too many fields could be redesigned to have fewer fields, possibly  through some nested object grouping of some of the information.  For example, a class with  city/state/zipcode fields could instead have one Address field</violation>
      <violation beginline="217" endline="217" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.HeavyConstructor" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Constructor must be as lightweight as possible. No control statement allowed, whereas a cyclomatic complexe of 2 has been detected. The Just-In-Time compiler does not compile constructors. Make them as lightweight as possible, or move the complexity of the code to a method called by the constructor. Then the complexity will be compiled by the JIT</violation>
      <violation beginline="217" endline="217" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 21 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="251" endline="251" begincolumn="13" endcolumn="13" rule="adobe.ac.pmd.rules.empty.EmptyCatchStatement" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This catch statement is empty. </violation>
      <violation beginline="268" endline="268" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.performance.CyclomaticComplexity" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This method is too complex. Maximum complexity is 15, but its cyclomatic complexity was 27. </violation>
      <violation beginline="268" endline="268" begincolumn="19" endcolumn="19" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 62 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="273" endline="273" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.naming.WronglyNamedVariable" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This variable (object) seems to be incorrectly named. Let your creativity flow. </violation>
      <violation beginline="300" endline="300" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.sizing.TooLongSwitchCase" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long switch case detected (3 lines maximum, but 9 actually). A switch case statement should be either empty, or contain a break, or call another method</violation>
      <violation beginline="304" endline="304" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="313" endline="313" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.sizing.TooLongSwitchCase" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long switch case detected (3 lines maximum, but 5 actually). A switch case statement should be either empty, or contain a break, or call another method</violation>
      <violation beginline="322" endline="322" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.sizing.TooLongSwitchCase" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long switch case detected (3 lines maximum, but 7 actually). A switch case statement should be either empty, or contain a break, or call another method</violation>
      <violation beginline="324" endline="324" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="333" endline="333" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.sizing.TooLongSwitchCase" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long switch case detected (3 lines maximum, but 5 actually). A switch case statement should be either empty, or contain a break, or call another method</violation>
      <violation beginline="342" endline="342" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.sizing.TooLongSwitchCase" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long switch case detected (3 lines maximum, but 5 actually). A switch case statement should be either empty, or contain a break, or call another method</violation>
      <violation beginline="351" endline="351" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.sizing.TooLongSwitchCase" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long switch case detected (3 lines maximum, but 10 actually). A switch case statement should be either empty, or contain a break, or call another method</violation>
      <violation beginline="365" endline="365" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.sizing.TooLongSwitchCase" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long switch case detected (3 lines maximum, but 10 actually). A switch case statement should be either empty, or contain a break, or call another method</violation>
      <violation beginline="367" endline="367" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="379" endline="379" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.sizing.TooLongSwitchCase" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long switch case detected (3 lines maximum, but 26 actually). A switch case statement should be either empty, or contain a break, or call another method</violation>
      <violation beginline="383" endline="383" begincolumn="16" endcolumn="16" rule="adobe.ac.pmd.rules.empty.EmptyCatchStatement" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This catch statement is empty. </violation>
      <violation beginline="409" endline="409" begincolumn="7" endcolumn="7" rule="adobe.ac.pmd.rules.sizing.TooLongSwitchCase" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Long switch case detected (3 lines maximum, but 8 actually). A switch case statement should be either empty, or contain a break, or call another method</violation>
      <violation beginline="413" endline="413" begincolumn="16" endcolumn="16" rule="adobe.ac.pmd.rules.empty.EmptyCatchStatement" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This catch statement is empty. </violation>
      <violation beginline="459" endline="459" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="464" endline="464" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.naming.WronglyNamedVariable" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This variable (tmp) seems to be incorrectly named. Let your creativity flow. </violation>
      <violation beginline="464" endline="464" begincolumn="31" endcolumn="31" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="531" endline="531" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.naming.WronglyNamedVariable" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This variable (object) seems to be incorrectly named. Let your creativity flow. </violation>
      <violation beginline="535" endline="535" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="540" endline="540" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="543" endline="543" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="610" endline="610" begincolumn="47" endcolumn="47" rule="adobe.ac.pmd.rules.naming.WronglyNamedVariable" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This variable (object) seems to be incorrectly named. Let your creativity flow. </violation>
      <violation beginline="625" endline="625" begincolumn="51" endcolumn="51" rule="adobe.ac.pmd.rules.naming.WronglyNamedVariable" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This variable (object) seems to be incorrectly named. Let your creativity flow. </violation>
      <violation beginline="679" endline="679" begincolumn="38" endcolumn="38" rule="adobe.ac.pmd.rules.naming.WronglyNamedVariable" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This variable (object) seems to be incorrectly named. Let your creativity flow. </violation>
      <violation beginline="693" endline="693" begincolumn="8" endcolumn="8" rule="adobe.ac.pmd.rules.naming.WronglyNamedVariable" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This variable (object) seems to be incorrectly named. Let your creativity flow. </violation>
      <violation beginline="712" endline="712" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="746" endline="746" begincolumn="35" endcolumn="35" rule="adobe.ac.pmd.rules.naming.WronglyNamedVariable" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This variable (object) seems to be incorrectly named. Let your creativity flow. </violation>
      <violation beginline="746" endline="746" begincolumn="22" endcolumn="22" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 50 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="805" endline="805" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="813" endline="813" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.maintanability.TrueFalseCondition" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This test contains a hard coded boolean value. You could remove it by having 'condition'. </violation>
      <violation beginline="894" endline="894" begincolumn="34" endcolumn="34" rule="adobe.ac.pmd.rules.naming.WronglyNamedVariable" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This variable (object) seems to be incorrectly named. Let your creativity flow. </violation>
      <violation beginline="894" endline="894" begincolumn="22" endcolumn="22" rule="adobe.ac.pmd.rules.performance.CyclomaticComplexity" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This method is too complex. Maximum complexity is 15, but its cyclomatic complexity was 76. </violation>
      <violation beginline="894" endline="894" begincolumn="22" endcolumn="22" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 139 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="1044" endline="1044" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="1047" endline="1047" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="1064" endline="1064" begincolumn="11" endcolumn="11" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="1067" endline="1067" begincolumn="27" endcolumn="27" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="1070" endline="1070" begincolumn="12" endcolumn="12" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="1072" endline="1072" begincolumn="29" endcolumn="29" rule="adobe.ac.pmd.rules.performance.AvoidInstanciationInLoop" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Instanciating a variable in a loop can be expensive. </violation>
      <violation beginline="1073" endline="1073" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="1074" endline="1074" begincolumn="18" endcolumn="18" rule="adobe.ac.pmd.rules.empty.EmptyCatchStatement" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This catch statement is empty. </violation>
      <violation beginline="1078" endline="1078" begincolumn="13" endcolumn="13" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="1103" endline="1103" begincolumn="17" endcolumn="17" rule="adobe.ac.pmd.rules.empty.EmptyCatchStatement" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This catch statement is empty. </violation>
      <violation beginline="1132" endline="1132" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="1149" endline="1149" begincolumn="14" endcolumn="14" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="1152" endline="1152" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="1174" endline="1174" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="1469" endline="1469" begincolumn="41" endcolumn="41" rule="adobe.ac.pmd.rules.naming.WronglyNamedVariable" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This variable (object) seems to be incorrectly named. Let your creativity flow. </violation>
      <violation beginline="1469" endline="1469" begincolumn="22" endcolumn="22" rule="adobe.ac.pmd.rules.sizing.TooLongFunction" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This function is far too long (20 maximum, but 35 actually). Violations of this rule usually indicate that the method has too much responsibility. Try to reduce the method size by creating helper methods and removing any copy/pasted code</violation>
      <violation beginline="1493" endline="1493" begincolumn="10" endcolumn="10" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="1615" endline="1615" begincolumn="13" endcolumn="13" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="1630" endline="1630" begincolumn="9" endcolumn="9" rule="adobe.ac.pmd.rules.performance.DeeplyNestedIf" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">Nested if statements are not a good design. </violation>
      <violation beginline="1749" endline="1749" begincolumn="47" endcolumn="47" rule="adobe.ac.pmd.rules.naming.WronglyNamedVariable" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This variable (object) seems to be incorrectly named. Let your creativity flow. </violation>
      <violation beginline="1781" endline="1781" begincolumn="34" endcolumn="34" rule="adobe.ac.pmd.rules.naming.WronglyNamedVariable" ruleset="All Flex Rules" package="nl.demonsters.debugger" class="MonsterDebugger.as" externalInfoUrl="http://opensource.adobe.com/svn/opensource/flexpmd/bin/flex-pmd-ruleset-creator.html?rule=" priority="3">This variable (object) seems to be incorrectly named. Let your creativity flow. </violation>
   </file>
</pmd>
